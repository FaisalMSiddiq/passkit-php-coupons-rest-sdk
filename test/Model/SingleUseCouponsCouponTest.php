<?php
/**
 * SingleUseCouponsCouponTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  PkIo
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PassKit Single Use Coupon API
 *
 * This protocol is suit for cases where the user requires a clean and simple single use coupon for short term coupon campaigns in Apple Wallet and Google Pay.
 *
 * OpenAPI spec version: 0.1
 * Contact: support@passkit.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.19
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace PkIo;

/**
 * SingleUseCouponsCouponTest Class Doc Comment
 *
 * @category    Class
 * @description Holds the details &amp; state of a unique individual coupon instance (i.e. a pass).
 * @package     PkIo
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class SingleUseCouponsCouponTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "SingleUseCouponsCoupon"
     */
    public function testSingleUseCouponsCoupon()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "externalId"
     */
    public function testPropertyExternalId()
    {
    }

    /**
     * Test attribute "offerId"
     */
    public function testPropertyOfferId()
    {
    }

    /**
     * Test attribute "campaignId"
     */
    public function testPropertyCampaignId()
    {
    }

    /**
     * Test attribute "pii"
     */
    public function testPropertyPii()
    {
    }

    /**
     * Test attribute "metaData"
     */
    public function testPropertyMetaData()
    {
    }

    /**
     * Test attribute "sku"
     */
    public function testPropertySku()
    {
    }

    /**
     * Test attribute "optOut"
     */
    public function testPropertyOptOut()
    {
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
    }

    /**
     * Test attribute "expiryDate"
     */
    public function testPropertyExpiryDate()
    {
    }

    /**
     * Test attribute "redemptionDetails"
     */
    public function testPropertyRedemptionDetails()
    {
    }

    /**
     * Test attribute "passOverrides"
     */
    public function testPropertyPassOverrides()
    {
    }

    /**
     * Test attribute "passMetaData"
     */
    public function testPropertyPassMetaData()
    {
    }

    /**
     * Test attribute "created"
     */
    public function testPropertyCreated()
    {
    }

    /**
     * Test attribute "updated"
     */
    public function testPropertyUpdated()
    {
    }
}
