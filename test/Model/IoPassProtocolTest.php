<?php
/**
 * IoPassProtocolTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  PkIo
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PassKit Single Use Coupon API
 *
 * This protocol is suit for cases where the user requires a clean and simple single use coupon for short term coupon campaigns in Apple Wallet and Google Pay.
 *
 * OpenAPI spec version: 0.1
 * Contact: support@passkit.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.19
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace PkIo;

/**
 * IoPassProtocolTest Class Doc Comment
 *
 * @category    Class
 * @description - RAW_PROTOCOL: Reserved for v2 v3 legacy pass protocol.  - V1_PROTOCOL: Reserved for migrating legacy v1 passes.  - FLIGHT_PROTOCOL: Flights - mapped to Google&#x27;s boarding passes class.  - LOYALTY_PROTOCOL: Loyalty - mapped to Google&#x27;s loyalty class.  - EVENT_TICKET_PROTOCOL: Event Tickets; - mapped to Google&#x27;s event ticket class.  - COUPON_PROTOCOL: Coupons - mapped to Google&#x27;s offer class.  - STORED_VALUE_PROTOCOL: Stored Value - mapped to Google&#x27;s gift class.  - TRANSIT_VALUE_PROTOCOL: Stored Value - mapped to Google&#x27;s transit class.  - MEMBERSHIP: Values 100 onwards are for PassKit generic protocols. Generic Membership protocol  - SINGLE_USE_COUPON: Single Use Coupon protocol  - PROP_0001: Values 1000 onwards are for proprietary protocols Proprietary protocol.  - PROP_0002: Proprietary protocol.
 * @package     PkIo
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class IoPassProtocolTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "IoPassProtocol"
     */
    public function testIoPassProtocol()
    {
    }
}
