<?php
/**
 * IoMetadataTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  PkIo
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * PassKit Single Use Coupon API
 *
 * This protocol is suit for cases where the user requires a clean and simple single use coupon for short term coupon campaigns in Apple Wallet and Google Pay.
 *
 * OpenAPI spec version: 0.1
 * Contact: support@passkit.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.19
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace PkIo;

/**
 * IoMetadataTest Class Doc Comment
 *
 * @category    Class
 * @description Additional data relating to the pass. Metadata can be provided with a create pass request. The only writeable field is UTM. All other fields are system generated.
 * @package     PkIo
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class IoMetadataTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "IoMetadata"
     */
    public function testIoMetadata()
    {
    }

    /**
     * Test attribute "status"
     */
    public function testPropertyStatus()
    {
    }

    /**
     * Test attribute "lifecycleEvents"
     */
    public function testPropertyLifecycleEvents()
    {
    }

    /**
     * Test attribute "utm"
     */
    public function testPropertyUtm()
    {
    }

    /**
     * Test attribute "altId"
     */
    public function testPropertyAltId()
    {
    }

    /**
     * Test attribute "issueIpAddress"
     */
    public function testPropertyIssueIpAddress()
    {
    }

    /**
     * Test attribute "installIpAddress"
     */
    public function testPropertyInstallIpAddress()
    {
    }

    /**
     * Test attribute "renderLocation"
     */
    public function testPropertyRenderLocation()
    {
    }

    /**
     * Test attribute "renderIpAddress"
     */
    public function testPropertyRenderIpAddress()
    {
    }

    /**
     * Test attribute "installUserAgent"
     */
    public function testPropertyInstallUserAgent()
    {
    }

    /**
     * Test attribute "renderUserAgent"
     */
    public function testPropertyRenderUserAgent()
    {
    }

    /**
     * Test attribute "installDeviceAttributes"
     */
    public function testPropertyInstallDeviceAttributes()
    {
    }

    /**
     * Test attribute "renderDeviceAttributes"
     */
    public function testPropertyRenderDeviceAttributes()
    {
    }

    /**
     * Test attribute "issueAt"
     */
    public function testPropertyIssueAt()
    {
    }

    /**
     * Test attribute "renderedAt"
     */
    public function testPropertyRenderedAt()
    {
    }

    /**
     * Test attribute "firstInstalledAt"
     */
    public function testPropertyFirstInstalledAt()
    {
    }

    /**
     * Test attribute "lastInstalledAt"
     */
    public function testPropertyLastInstalledAt()
    {
    }

    /**
     * Test attribute "firstUninstalledAt"
     */
    public function testPropertyFirstUninstalledAt()
    {
    }

    /**
     * Test attribute "lastUninstalledAt"
     */
    public function testPropertyLastUninstalledAt()
    {
    }

    /**
     * Test attribute "invalidatedAt"
     */
    public function testPropertyInvalidatedAt()
    {
    }

    /**
     * Test attribute "lastUpdatedAt"
     */
    public function testPropertyLastUpdatedAt()
    {
    }
}
